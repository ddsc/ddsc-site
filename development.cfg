[buildout]
index = http://packages.lizardsystem.nl
extends =
    http://packages.lizardsystem.nl/kgs/3.1.20/versions.cfg
    server.cfg
find-links =
unzip = true
prefer-final = true
versions = versions
extensions =
    mr.developer
    buildout-versions
parts =
    sysegg
    mkdir
    omelette
    console_scripts
    pyflakes
    sphinx
    pydev
    ${buildout:serverparts}
develop = .
auto-checkout =
eggs =
    ddsc-site


[versions]
# Specific pins. We inherit lots of pins from the KGS, so if you add a
# development egg, you really need to un-pin it here.
ddsc-site =

# Reported by buildout-versions


[sources]
# Sources that mr.developer can check out and add as development egg.
# If one of them is absolutely necessary, add its name to the "auto-checkout"
# in [buildout].
# Example:
# lizard-ui = git git@github.com:lizardsystem/lizard-ui.git  branch=roland-api
# lizard-map = git git@github.com:lizardsystem/lizard-map.git branch=reinout-api
# lizard-wms = git git@github.com:lizardsystem/lizard-wms.git branch=reinout-api
# lizard-maptree = git git@github.com:lizardsystem/lizard-maptree.git
# lizard-structure = git git@github.com:lizardsystem/lizard-structure.git


[sysegg]
# Add eggs here that are best handled through OS-level packages.
recipe = osc.recipe.sysegg
force-sysegg = true
eggs =
    # psycopg2
    # matplotlib
    # PIL
    # pyproj


[mkdir]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/log


[serverconfig]
# Configuration for setting up gunicorn, supervisor etc.
# For the gunicorn port, check on the server in the other sites as
# there should be no overlap. And simply give the supervisor port one
# number higher.
gunicorn-port = 9030
supervisor-port = 9031
sitename = dijkdata.nl


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    createcoverage
    pep8
    zest.releaser
    fabric


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}


[pydev]
recipe = pb.recipes.pydev
eggs = ${buildout:eggs}
pydevproject_path = ${buildout:directory}/.pydevproject
extra_paths =
